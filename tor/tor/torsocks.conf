# This is the configuration for libtorsocks (transparent socks) for use
# with tor, which is providing a socks server on port 9050 by default.
#
# Lines beginning with # and blank lines are ignored
#
# The basic idea is to specify:
#       - Local subnets - Networks that can be accessed directly without
#                         assistance from a socks server
#       - Paths - Paths are basically lists of networks and a socks server
#                 which can be used to reach these networks
#       - Default server - A socks server which should be used to access
#                          networks for which no path is available
# Much more documentation than provided in these comments can be found in
# torsocks.conf(5) and usewithtor(1) manpages.

# We specify local as 127.0.0.0 - 127.191.255.255 because the
# Tor MAPADDRESS virtual IP range is the rest of net 127.
# Torsocks also treats as local all the subnets that Tor does.
local = 127.0.0.0/255.128.0.0
local = 127.128.0.0/255.192.0.0
local = 169.254.0.0/255.255.0.0
local = 172.16.0.0/255.240.0.0
local = 192.168.0.0/255.255.0.0
  
# Default server
# For connections that aren't to the local subnets 
# the server at 127.0.0.1 should be used (again, hostnames could be used
# too, see note above)
server = 0.0.0.0

# SOCKS server type defaults to 4
#server_type = 5

# The port defaults to 1080 but I've stated it here for clarity
server_port = 9050

# Username and password (if required on a SOCKSv5 server)
#default_user =
#default_pass =

# Paths
# For this example this machine needs to access 150.0.0.0/255.255.0.0 as
# well as port 80 on the network 150.1.0.0/255.255.0.0 through
# the socks 5 server at 10.1.7.25 (if this machines hostname was
# "socks.hello.com" we could also specify that, unless --disable-hostnames
# was specified to ./configure).

#path {
#        reaches = 150.0.0.0/255.255.0.0
#        reaches = 150.1.0.0:80/255.255.0.0
#        server = 10.1.7.25
#        server_type = 5
#        default_user = delius
#        default_pass = hello
#}
#
